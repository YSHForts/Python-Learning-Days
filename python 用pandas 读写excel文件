python中没有pip解决方法
  1 先安装setuptools

     下载地址：https://pypi.python.org/pypi/setuptools#downloads

   将下载后的tar文件解压，用CMD模式进入到解压后的文件所在的目录执行命令：python setup.py install

  2 安装pip 

   下载地址：https://pypi.python.org/pypi/pip#downloads

     将下载后的tar文件解压，用CMD模式进入到解压后的文件所在的目录执行命令:python setup.py install 

   安装完成
1、python导入pandas，读入或写xlsx文件：需要import xlrd和openxr包
2、vscode中python无法正确输出中文
  import io
  import sys
  #改变标准输出的默认编码
  sys.stdout = io.TextIOWrapper(sys.stdout.buffer, encoding='utf-8')
3、pandas创建excel文件
  import pandas as pd 
  df = pd.DataFrame({'ID':[1,2,3],'Name':['Tim','Tom','Jack']})
  df.set_index('ID',inplace=True)
  df.to_excel('c:\\Users\\Yushenghai\\python files\\output.xlsx')
  print(df)
4、pandas读取excel文件内容
  import pandas as pd
  data = pd.read_excel('./Setback.xlsx')     # data = pd.read_excel('./Setback.xlsx',header=1或header=none或index_col='ID')  
  print(data.shape) #统计总共的行数和列数
  print(data.columns)
  print(data.head(3))
  
5、把series当作行和列来使用
  import pandas as pd 
  s1=pd.Series([1,2,3],index=[1,2,3],name='A')
  s2=pd.Series([10,20,30],index=[1,2,3],name='B')
  s3=pd.Series([100,200,300],index=[1,2,3],name='C')
  df=pd.DataFrame({s1.name:s1,s2.name:s2,s3.name:s3})
  df.set_index(s1.name,inplace=True)
  print(df)
  data=df.to_excel(r'c:\Users\Yushenghai\python files\output2.xlsx')
  print('Done!')
  
  6、excel自动填充年月日
  import io
import sys
# 改变标准输出的默认编码
sys.stdout = io.TextIOWrapper(sys.stdout.buffer, encoding='utf-8')

import pandas as pd 
from datetime import date,timedelta
# def add_month(d,md):        #自定义一个累加月份函数
#     yd=md//12
#     m = d.month+md%12
#     if m!=12:
#         yd =+ m//12
#         m = m % 12
#     return(d.year+yd,m,d.day)
book=pd.read_excel(r'C:\Users\Yushenghai\python files\Books.xlsx',skiprows=3,usecols='C:F',index_col=None,dtype={'ID':str,'InStore':str,'Date':str})
start=date(2019,1,1)

for i in book.index:
    book['ID'].at[i] = i + 1
    if i%2==0:
        book['InStore'].at[i]='Yes'
    else:
        book['InStore'].at[i]='No'
    # book['Date'].at[i]=add_month(start,i) #自动累加月份
    book['Date'].at[i]=start+timedelta(days=i) #自动累加天数，使用timedelta（）函数

print(book)
